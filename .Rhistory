base_puntos_pol[pol_id == 4044] %>% st_sf()
base_puntos_pol[pol_id == 4044]
base_puntos_pol
base_puntos_pol[pol_id == 4044] %>% st_sf()
mi_pol <- base_puntos_pol[pol_id == 4044]
library(leaflet)
mi_pol %>% leaflet() %>% addTiles() %>% addCircles()
leaflet() %>% addTiles() %>% addCircles(lng = mi_pol$lon, lat = mi_pol$lat, popup = mi_pol$name)
osm_pol[order(categoria)][ID == 3278,.(n = .N), by = categoria]
mi_pol <- base_puntos_pol[pol_id == 3278]
leaflet() %>% addTiles() %>% addCircles(lng = mi_pol$lon, lat = mi_pol$lat, popup = mi_pol$name)
mi_pol
base_multi_pol[ID == 3278]
vias_bogota[ID == 3278]
mi_pol
base_multi_pol[ID == 3278]
vias_bogota[ID == 3278]
osm_pol[order(categoria)][ID == 3278,.(n = .N), by = categoria]
base_multi_pol
base_multi_pol[ID == 3278]
vias_bogota[ID == 3278]
osmdata_base <- readRDS("Bases/osmdata_base.RDS") %>% st_sf() %>% st_transform(st_crs(crs$osm_points))
osmdata_base <- readRDS("Bases/osmdata_base.RDS") %>% st_sf() %>% st_transform(st_crs(crs$osm_points))
readRDS("Bases/osmdata_base.RDS")
readRDS("Bases/osmdata_base.RDS") %>% st_sf()
readRDS("Bases/osmdata_base.RDS")
rm(list = ls()); gc(T)
## Cargo los paquetes
library(tidyverse)
library(osmdata)
library(sf)
library(geojsonsf)
library(mapview)
library(data.table)
library(geojsonio)
## Categorias
amenity_cat <- c("atm", "bank", "bar","bicycle_parking","bus_station", "cafe", "clinic", "college", "fast_food",
"fuel","grave_yard", "hospital","ice_cream", "marketplace","motorcycle_parking", "parking", "payment_centre",
"payment_terminal", "pharmacy", "place_of_worship", "police", "post_office", "restaurant","school","university", "veterinary")
shop_cat <- c("alcohol", "baby_goods", "bakery", "butcher", "convenience","dairy","department_store",	"doityourself", "food", "funeral_directors",
"general", "greengrocer", "grocery", "ice_cream", "kiosk", "mall", "medical_supply","pet","sports", "supermarket")
leisure_cat <- c('fitness_centre','sports_centre')
building_cat <- c("apartments","bakehouse", "chapel", "church", "college","commercial", "hospital","hotel", "house", "industrial",
"kiosk", "office","Oficina Central", "public", "residential", "retail","supermarket", "university","warehouse","yes")
tourism_cat <- c('hostel','hotel','motel')
highway_cat <- c("primary","secondary","trunk")
landuse_cat <- c("cemetery", "military", "residential")
office_cat <- c("company","financial","insurance","notary")
all_features <- sort(unique(c(amenity_cat, shop_cat, landuse_cat, leisure_cat, building_cat, tourism_cat, highway_cat, "bus_stop")))
## Consulta de todas las cetogrias
query1 <- opq(bbox = "Bogota", timeout = 25*100) %>% add_osm_feature(key = "amenity",value = amenity_cat) %>% osmdata_sf()
query2 <- opq(bbox = "Bogota", timeout = 25*100) %>% add_osm_feature(key = "shop",value = shop_cat) %>% osmdata_sf()
query3 <- opq(bbox = "Bogota", timeout = 25*100) %>% add_osm_feature(key = "leisure",value = leisure_cat) %>% osmdata_sf()
query4 <- opq(bbox = "Bogota", timeout = 25*100) %>% add_osm_feature(key = "building",value = building_cat) %>% osmdata_sf()
query5 <- opq(bbox = "Bogota", timeout = 25*100) %>% add_osm_feature(key = "tourism",value = tourism_cat) %>% osmdata_sf()
query6 <- opq(bbox = "Bogota", timeout = 25*100) %>% add_osm_feature(key = "highway",value = "bus_stop") %>% osmdata_sf()
query7 <- opq(bbox = "Bogota", timeout = 25*100) %>% add_osm_feature(key = "highway",value = highway_cat) %>% osmdata_sf()
query8 <- opq(bbox = "Bogota", timeout = 25*100) %>% add_osm_feature(key = "landuse",value = landuse_cat) %>% osmdata_sf()
query9 <- opq(bbox = "Bogota", timeout = 25*100) %>% add_osm_feature(key = "office",value = office_cat) %>% osmdata_sf()
query_cate <- c(query1, query2, query3, query4, query5, query6, query8, query9)
## resultado poligonos
res_pol <- bind_rows(
query_cate$osm_polygons[,c("osm_id","name","amenity")] %>% mutate(features = amenity) %>% select("osm_id", "name", "features"),
query_cate$osm_polygons[,c("osm_id","name","shop")] %>% mutate(features = shop) %>% select("osm_id", "name", "features"),
query_cate$osm_polygons[,c("osm_id","name","leisure")] %>% mutate(features = leisure) %>% select("osm_id", "name", "features"),
query_cate$osm_polygons[,c("osm_id","name","building")] %>% mutate(features = building) %>% select("osm_id", "name", "features"),
query_cate$osm_polygons[,c("osm_id","name","tourism")] %>% mutate(features = tourism) %>% select("osm_id", "name", "features"),
query_cate$osm_polygons[,c("osm_id","name","highway")] %>% mutate(features = highway) %>% select("osm_id", "name", "features"),
query_cate$osm_polygons[,c("osm_id","name","landuse")] %>% mutate(features = landuse) %>% select("osm_id", "name", "features"),
query_cate$osm_polygons[,c("osm_id","name","office")] %>% mutate(features = office) %>% select("osm_id", "name", "features"))
nrow(res_pol);uniqueN(res_pol$osm_id)
setDT(res_pol)
res_pol$features <- ifelse(res_pol$features == "", NA, res_pol$features)
res_pol <- st_sf(distinct(res_pol)[order(osm_id, features)][,head(.SD,1), by = osm_id]) #24161
colSums(is.na(res_pol))
## resultado multipoligonos
res_mul_pol <- bind_rows(
query_cate$osm_multipolygons[,c("osm_id","name","amenity")] %>% mutate(features = amenity) %>% select("osm_id", "name", "features"),
query_cate$osm_multipolygons[,c("osm_id","name","shop")] %>% mutate(features = shop) %>% select("osm_id", "name", "features"),
query_cate$osm_multipolygons[,c("osm_id","name","building")] %>% mutate(features = building) %>% select("osm_id", "name", "features"),
query_cate$osm_multipolygons[,c("osm_id","name","highway")] %>% mutate(features = highway) %>% select("osm_id", "name", "features"),
query_cate$osm_multipolygons[,c("osm_id","name","landuse")] %>% mutate(features = landuse) %>% select("osm_id", "name", "features"),
query_cate$osm_multipolygons[,c("osm_id","name","office")] %>% mutate(features = office) %>% select("osm_id", "name", "features"))
nrow(res_mul_pol);uniqueN(res_mul_pol$osm_id)
setDT(res_mul_pol)
res_mul_pol$features <- ifelse(res_mul_pol$features == "", NA, res_mul_pol$features)
res_mul_pol <- st_sf(na.omit(distinct(res_mul_pol))[order(osm_id, features)][,head(.SD,1), by = osm_id]) #190
colSums(is.na(res_mul_pol))
## resultado puntos
res_points <- bind_rows(subset(query_cate$osm_points[,c("osm_id", "name", "amenity")], amenity %in% amenity_cat) %>% mutate(features = amenity) %>% select("osm_id", "name", "features"),
subset(query_cate$osm_points[,c("osm_id", "name", "shop")], shop %in% shop_cat) %>% mutate(features = shop) %>% select("osm_id", "name", "features"),
subset(query_cate$osm_points[,c("osm_id", "name", "leisure")], leisure %in% leisure_cat)%>% mutate(features = leisure) %>% select("osm_id", "name", "features"),
subset(query_cate$osm_points[,c("osm_id", "name", "building")], building %in% building_cat)%>% mutate(features = building) %>% select("osm_id", "name", "features"),
subset(query_cate$osm_points[,c("osm_id", "name", "tourism")], tourism %in% tourism_cat)%>% mutate(features = tourism) %>% select("osm_id", "name", "features"),
subset(query_cate$osm_points[,c("osm_id", "name", "highway")], highway %in% "bus_stop")%>% mutate(features = highway) %>% select("osm_id", "name", "features"),
subset(query_cate$osm_points[,c("osm_id", "name", "office")], office %in% office_cat)%>% mutate(features = office) %>% select("osm_id", "name", "features"))
nrow(res_points);uniqueN(res_points$osm_id)
setDT(res_points)
res_points <- st_sf(distinct(res_points)[order(osm_id, features)][,head(.SD,1), by = osm_id])
colSums(is.na(res_points))
## Agrego las vías principales
res_vias <- query7$osm_lines[,c("osm_id","name","highway")]%>% mutate(features = highway) %>% select("osm_id", "name", "features")
## Uno poligonos, con multipoligonos y puntos
res_query <- bind_rows(res_pol, res_mul_pol, res_points, res_vias) #68215
subset(res_query, osm_id == 58776776)
res_query <- subset(res_query, !is.na(features)) #67330
subset(res_query, osm_id == 58776776)
res_query <- subset(res_query, features %in% all_features) #64009
subset(res_query, osm_id == 58776776)
res_query$name <- ifelse(res_query$name == "", NA, res_query$name)
subset(res_query, osm_id == 58776776)
res_query <- subset(res_query, !(features == "yes" & is.na(name))) #49515
subset(res_query, osm_id == 58776776)
res_query <- res_query %>% st_transform(st_crs("+proj=utm +ellps=GRS80 +datum=WGS84"))
subset(res_query, osm_id == 58776776)
`%not_in%` <- Negate(`%in%`)
res_query <- subset(res_query, features %not_in% highway_cat) #43659
colSums(is.na(res_query))
subset(res_query, osm_id == 58776776)
saveRDS(object = as.data.table(res_query), file = "Bases/osmdata_base.RDS")
rm(list=ls())
gc(T)
## Leo los datos
crs <- opq(bbox = "Bogota", timeout = 25*100) %>% add_osm_feature(key = "amenity",value = "bank") %>% osmdata_sf()
osmdata_base <- readRDS("Bases/osmdata_base.RDS") %>% st_sf() %>% st_transform(st_crs(crs$osm_points))
## Extraccion de las coordenadas del objeto geometry
base_puntos <- subset(osmdata_base, st_geometry_type(geometry) == "POINT")
base_puntos_coords <- do.call(rbind, st_geometry(base_puntos)) %>% as_tibble() %>% setNames(c("lon","lat"))
## Se pegan las coordenas de forma individual
base_puntos <- bind_cols(base_puntos, base_puntos_coords) %>% as.data.frame()
base_puntos <- base_puntos[,c(1:5)]
#------ Lectura de la subdivisión creada anterior ------#
pol_100 <- geojson_read("Bases/bogota_subdivi_100.geojson", what = "sp")
osm_coord <- data.frame(Longitude = base_puntos$lon, Latitude = base_puntos$lat, osm_id = base_puntos$osm_id)
#------ Alinear coordenadas ------#
sp::coordinates(osm_coord) <- ~ Longitude + Latitude
sp::proj4string(osm_coord) <- sp::proj4string(pol_100)
#------ Generar tabla con los puntos encontrados ------#
poligonos <- sp::over(osm_coord, pol_100)
colnames(poligonos) <- c("pol_id")
## Se agrega el id del poligono a la osm_data
base_puntos <- bind_cols(base_puntos, poligonos)
## Guardo la base final con la asignacion de los poligonos
saveRDS(object = base_puntos, file = "Bases/base_puntos_pol.RDS")
base_poligonos_multi <- subset(osmdata_base, st_geometry_type(geometry) != "POINT")
base_poligonos_multi <- base_poligonos_multi %>% st_transform(st_crs("+proj=utm +ellps=GRS80 +datum=WGS84")) %>% st_make_valid()
base_poligonos_multi
subset(base_poligonos_multi, osm_id == 58776776)
## Transformo las coordenadas de los poligonos
pol_100 <- st_as_sf(geojson_read("Bases/bogota_subdivi_100.geojson", what = "sp")) %>% st_transform(st_crs("+proj=utm +ellps=GRS80 +datum=WGS84")) %>% st_make_valid()
## Realizo el join para ver la interseccion entre las carreteras y los poligonos
pol_multi <- sf::st_join(pol_100, base_poligonos_multi, left = TRUE, largest = TRUE) %>% as.data.frame() %>% setDT()
pol_multi <- pol_multi[!is.na(osm_id)]
pol_multi
subset(pol_multi, osm_id == 58776776)
subset(base_poligonos_multi, osm_id == 58776776)
base_poligonos_multi <- base_poligonos_multi %>% st_transform(st_crs("+proj=utm +ellps=GRS80 +datum=WGS84")) %>% st_set_precision(1000000) %>% st_make_valid()
base_poligonos_multi <- subset(osmdata_base, st_geometry_type(geometry) != "POINT")
base_poligonos_multi <- base_poligonos_multi %>% st_transform(st_crs("+proj=utm +ellps=GRS80 +datum=WGS84")) %>% st_set_precision(1000000) %>% st_make_valid()
subset(base_poligonos_multi, osm_id == 58776776)
## Transformo las coordenadas de los poligonos
pol_100 <- st_as_sf(geojson_read("Bases/bogota_subdivi_100.geojson", what = "sp")) %>% st_transform(st_crs("+proj=utm +ellps=GRS80 +datum=WGS84")) %>% st_set_precision(1000000) %>% st_make_valid()
pol_multi <- sf::st_join(pol_100, base_poligonos_multi, left = TRUE, largest = TRUE) %>% as.data.frame() %>% setDT()
subset(pol_multi, osm_id == 58776776)
subset(base_poligonos_multi, osm_id == 58776776)
base_poligonos_multi <- subset(osmdata_base, st_geometry_type(geometry) != "POINT")
base_poligonos_multi <- base_poligonos_multi %>% st_transform(st_crs("+proj=utm +ellps=GRS80 +datum=WGS84")) %>% st_make_valid()
subset(base_poligonos_multi, osm_id == 58776776)
pol_100 <- st_as_sf(geojson_read("Bases/bogota_subdivi_100.geojson", what = "sp")) %>% st_transform(st_crs("+proj=utm +ellps=GRS80 +datum=WGS84")) %>% st_make_valid()
## Realizo el join para ver la interseccion entre las carreteras y los poligonos
pol_multi <- sf::st_join(pol_100, base_poligonos_multi, left = FALSE, largest = TRUE) %>% as.data.frame() %>% setDT()
subset(pol_multi, osm_id == 58776776)
pol_100
pol_3278 <- subset(pol_100, ID == 3278)
mapview(pol_3278)
OSM_3278 <- sub(base_poligonos_multi, osm_id == 58776776)
base_poligonos_multi
OSM_3278 <- subset(base_poligonos_multi, osm_id == 58776776)
OSM_3278
mapview(OSM_3278)
sf::st_join(pol_3278, OSM_3278)
sf::st_join(pol_3278, OSM_3278, left = TRUE)
sf::st_join(pol_3278, OSM_3278, left = TRUE, largest = TRUE)
bolsa_de <- sf::st_join(pol_3278, OSM_3278, left = TRUE)
mapview(bolsa_de)
bolsa_de
bolsa_de
bolsa_de <- sf::st_join(OSM_3278, pol_3278, left = TRUE,)
mapview(bolsa_de)
bolsa_de <- sf::st_join(OSM_3278, pol_3278)
mapview(bolsa_de)
bolsa_de <- sf::st_join(OSM_3278, pol_3278)
bolsa_de
OSM_3278
pol_3278
pol_multi <- sf::st_join(pol_100, base_poligonos_multi, left = TRUE, largest = TRUE)
subset(pol_multi, osm_id == 58776776)
pol_multi
OSM_3278
pol_3278
bolsa_de <- sf::st_join(OSM_3278, pol_3278, left = TRUE, largest = TRUE)
mapview(bolsa_de)
bolsa_de <- sf::st_join(OSM_3278, pol_3278, left = TRUE, largest = TRUE)
bolsa_de
subset(bolsa_de, osm_id == 58776776)
## Realizo el join para ver la interseccion entre las carreteras y los poligonos
pol_multi <- sf::st_join(base_poligonos_multi, pol_100, left = TRUE, largest = TRUE) %>% as.data.frame() %>% setDT()
pol_multi
subset(pol_multi, osm_id == 58776776)
uniqueN(pol_multi$osm_id)
uniqueN(pol_multi$ID) # 29368
## Realizo el join para ver la interseccion entre las carreteras y los poligonos
pol_multi <- sf::st_join(pol_100, base_poligonos_multi, left = TRUE, largest = TRUE) %>% as.data.frame() %>% setDT()
uniqueN(pol_multi$osm_id) # 29368
uniqueN(pol_multi$ID) # 3460
pol_3278
OSM_3278
bolsa_de <- sf::st_join(pol_3278, OSM_3278, left = TRUE, largest = TRUE)
bolsa_de
subset(bolsa_de, osm_id == 58776776)
mapview(bolsa_de)
pol_multi
subset(pol_multi, osm_id == 58776776)
pol_3278 <- subset(pol_100, ID %in% 3000:4000)
pol_3278
OSM_3278 <- subset(base_poligonos_multi, osm_id == c(229023872, 58776776))
bolsa_de <- sf::st_join(pol_3278, OSM_3278, left = TRUE, largest = TRUE)
bolsa_de
subset(bolsa_de, osm_id == 58776776)
pol_3278 <- subset(pol_100, ID %in% 3000:3500)
OSM_3278 <- subset(base_poligonos_multi, osm_id == c(229023872, 58776776))
bolsa_de <- sf::st_join(pol_3278, OSM_3278, left = TRUE, largest = TRUE)
subset(bolsa_de, osm_id == 58776776)
pol_3278 <- subset(pol_100, ID %in% 3200:3300)
OSM_3278 <- subset(base_poligonos_multi, osm_id == c(229023872, 58776776))
mapview(pol_3278)
mapview(OSM_3278)
OSM_3278
base_poligonos_multi
OSM_3278 <- subset(base_poligonos_multi, osm_id %in% c(229023872, 58776776))
OSM_3278
mapview(OSM_3278)
bolsa_de <- sf::st_join(pol_3278, OSM_3278, left = TRUE, largest = TRUE)
subset(bolsa_de, osm_id == 58776776)
mapview(bolsa_de)
subset(bolsa_de, osm_id %in% c(229023872, 58776776))
bolsa_de
subset(bolsa_de, osm_id %in% c(229023872, 58776776))
OSM_3278
bolsa_de <- sf::st_join(pol_3278, OSM_3278, left = TRUE)
bolsa_de
subset(bolsa_de, osm_id %in% c(229023872, 58776776))
bolsa_de <- sf::st_join(pol_3278, OSM_3278, left = TRUE, largest = TRUE)
subset(bolsa_de, osm_id %in% c(229023872, 58776776))
bolsa_de <- sf::st_join(pol_3278, OSM_3278, left = TRUE)
subset(bolsa_de, osm_id %in% c(229023872, 58776776))
## Realizo el join para ver la interseccion entre las carreteras y los poligonos
pol_multi <- sf::st_join(pol_100, base_poligonos_multi, left = TRUE) %>% as.data.frame() %>% setDT()
subset(pol_multi, osm_id == 58776776)
uniqueN(pol_multi$osm_id) # 29368 - 3155
uniqueN(pol_multi$ID) # 3460 - 20634
pol_multi
base_poligonos_multi <- subset(osmdata_base, st_geometry_type(geometry) != "POINT")
base_poligonos_multi <- base_poligonos_multi %>% st_transform(st_crs("+proj=utm +ellps=GRS80 +datum=WGS84")) %>% st_make_valid()
subset(base_poligonos_multi, osm_id == 58776776)
## Transformo las coordenadas de los poligonos
pol_100 <- st_as_sf(geojson_read("Bases/bogota_subdivi_100.geojson", what = "sp")) %>% st_transform(st_crs("+proj=utm +ellps=GRS80 +datum=WGS84")) %>% st_make_valid()
## Realizo el join para ver la interseccion entre las carreteras y los poligonos
pol_multi <- sf::st_join(pol_100, base_poligonos_multi, left = TRUE) %>% as.data.frame() %>% setDT()
subset(base_poligonos_multi, osm_id == 58776776)
subset(pol_multi, osm_id == 58776776)
## Guardo la base final con la asignacion de los poligonos
saveRDS(object = pol_multi, file = "Bases/base_multi_pol.RDS")
## Miro las etiquetas para la característica de vías
available_tags("highway")
## Realizo el query a la app de overpass
query7 <- opq(bbox = "Bogota", timeout = 25*100) %>% add_osm_feature(key = "highway",value = c("primary","secondary","trunk")) %>% osmdata_sf()
res_highway <- query7$osm_lines[,c("osm_id","name","highway")] %>% mutate(features = highway) %>% dplyr::select("osm_id", "name", "features")
carreteras <-  res_highway %>% st_transform(st_crs("+proj=utm +ellps=GRS80 +datum=WGS84")) %>% st_make_valid()
## Transformo las coordenadas de los poligonos
pol_100 <- st_as_sf(geojson_read("Bases/bogota_subdivi_100.geojson", what = "sp")) %>% st_transform(st_crs("+proj=utm +ellps=GRS80 +datum=WGS84")) %>% st_make_valid()
## Realizo el join para ver la interseccion entre las carreteras y los poligonos
pol_carretera <- sf::st_join( pol_100,carreteras,  left = TRUE) %>% as.data.frame() %>% setDT()
colSums(is.na(pol_carretera))
pol_carretera_2 <- pol_carretera[!is.na(osm_id)]
## Gurado el resultado final
saveRDS(pol_carretera_2[,c("ID","features")],"Bases/vias_bogota.RDS")
list(rm = ls()); gc(T)
## Guardo la base final con la asignacion de los poligonos
base_puntos_pol <- as.data.table(readRDS("Bases/base_puntos_pol.RDS"))
base_multi_pol <- as.data.table(readRDS("Bases/base_multi_pol.RDS"))
vias_bogota <- as.data.table(readRDS("Bases/vias_bogota.RDS"))
## uno las bases
osmdata_base <- bind_rows(base_puntos_pol[,.(ID = pol_id, features)], base_multi_pol[,.(ID, features)], vias_bogota[,.(ID, features)])
osmdata_base <- na.omit(osmdata_base)
saveRDS(osmdata_base, "Bases/osmdata_pol.RDS")
rm(list = ls());gc(T)
library(data.table)
sort(unique(osm_pol$features)); length(sort(unique(osm_pol$features)))
osm_pol <- as.data.table(readRDS("Bases/osmdata_pol.RDS"))
osm_pol
sort(unique(osm_pol$features)); length(sort(unique(osm_pol$features)))
## Categorias
x <- c(
bares <- c("alcohol","bar"),
residencial <- c("apartments","house", "residential"),
bancario <- c("atm","bank"),
panaderias <- c("bakery", "cafe"),
parqueaderos <- c("bicycle_parking","motorcycle_parking","parking"),
paraderos <- c("bus_station", "bus_stop"),
templos <- c("chapel", "church", "place_of_worship"),
hospitales <- c("clinic", "hospital"),
educacion <- c("college","school","university"),
comercial <- c("commercial", "general") ,
tiendas <- c("baby_goods","butcher","convenience","dairy","food","greengrocer","grocery","kiosk","retail") ,
grandes_superficies <- c("department_store",	"doityourself", "mall", "marketplace","supermarket") ,
restaurantes <- c("fast_food","restaurant","ice_cream") ,
gimnasios <- c("fitness_centre","sports","sports_centre") ,
cementerios <- c("funeral_directors","cemetery","grave_yard") ,
hoteles <- c("hostel", "hotel","motel") ,
industrial <- c("industrial","warehouse") ,
droguerias <- c("medical_supply","pharmacy") ,
oficinas <- c("office", "Oficina Central","public", "company","financial","insurance","notary","yes") ,
correo <- c("payment_centre","payment_terminal","post_office") ,
mascotas <- c("pet", "veterinary") ,
defensa <- c("police","military") ,
vias <- c("fuel","primary","secondary","trunk"))
setdiff(sort(unique(osm_pol$features)), x)
sort(unique(osm_pol$features)); length(sort(unique(osm_pol$features)))
intersect(sort(unique(osm_pol$features)), x)
## Categorias
bares <- c("alcohol","bar")
residencial <- c("apartments","house", "residential")
bancario <- c("atm","bank")
panaderias <- c("bakery", "cafe")
parqueaderos <- c("bicycle_parking","motorcycle_parking","parking")
paraderos <- c("bus_station", "bus_stop")
templos <- c("chapel", "church", "place_of_worship")
hospitales <- c("clinic", "hospital")
educacion <- c("college","school","university")
comercial <- c("commercial", "general")
tiendas <- c("baby_goods","butcher","convenience","dairy","food","greengrocer","grocery","kiosk","retail")
grandes_superficies <- c("department_store",	"doityourself", "mall", "marketplace","supermarket")
restaurantes <- c("fast_food","restaurant","ice_cream")
gimnasios <- c("fitness_centre","sports","sports_centre")
cementerios <- c("funeral_directors","cemetery","grave_yard")
hoteles <- c("hostel", "hotel","motel")
industrial <- c("industrial","warehouse")
droguerias <- c("medical_supply","pharmacy")
oficinas <- c("office", "Oficina Central","public", "company","financial","insurance","notary","yes")
correo <- c("payment_centre","payment_terminal","post_office")
mascotas <- c("pet", "veterinary")
defensa <- c("police","military")
vias <- c("fuel","primary","primary_link","secondary","trunk")
## Creo la variable categorias en la base
osm_pol <- osm_pol %>% mutate(categoria = case_when(features %in% bares ~ "bares",#1
features %in% residencial ~ "residencial",#2
features %in% bancario ~ "bancario",#3
features %in% panaderias ~ "panaderias",#4
features %in% parqueaderos ~ "parqueaderos",#5
features %in% paraderos ~ "paraderos",#6
features %in% templos ~ "templos",#7
features %in% hospitales ~ "hospitales",#8
features %in% educacion ~ "educacion",#9
features %in% comercial ~ "comercial",#10
features %in% tiendas ~ "tiendas",#11
features %in% grandes_superficies ~ "grandes_superficies",#12
features %in% restaurantes ~ "restaurantes",#13
features %in% gimnasios ~ "gimnasios",#14
features %in% cementerios ~ "cementerios",#15
features %in% hoteles ~ "hoteles",#16
features %in% industrial ~ "industrial",#17
features %in% droguerias ~ "droguerias",#18
features %in% oficinas ~ "oficinas",#19
features %in% correo ~ "correo",#20
features %in% mascotas ~ "mascotas",#21
features %in% defensa ~ "defensa",#22
features %in% vias ~ "vias"))#23
osm_dcast <- dcast(data = osm_pol, formula = ID ~ categoria, fun.aggregate = length)
osm_dcast
osm_dcast[ID == 4044]
osm_pol[order(categoria)][ID == 4044,.(n = .N), by = categoria]
mi_pol <- base_puntos_pol[pol_id == 4044]
base_puntos_pol
## Guardo la base final con la asignacion de los poligonos
base_puntos_pol <- as.data.table(readRDS("Bases/base_puntos_pol.RDS"))
base_multi_pol <- as.data.table(readRDS("Bases/base_multi_pol.RDS"))
vias_bogota <- as.data.table(readRDS("Bases/vias_bogota.RDS"))
mi_pol <- base_puntos_pol[pol_id == 4044]
mi_pol
leaflet() %>% addTiles() %>% addCircles(lng = mi_pol$lon, lat = mi_pol$lat, popup = mi_pol$name)
vias_bogota[ID == 3278]
base_multi_pol
base_puntos_pol[pol_id == 4044]  %>% st_sf()
base_multi_pol[ID == 3278]%>% st_sf()
mapview(base_multi_pol[ID == 4044]%>% st_sf())
base_multi_pol[ID == 4044]%>% st_sf()
base_multi_pol[ID == 4044]%>% st_sf()
mapview(base_multi_pol[ID == 4044]%>% st_sf())
base_multi_pol[ID == 4044]%>% st_sf()
base_multi_pol[ID == 4044]%>% st_sf()
base_multi_pol[ID == 4044][,-ID]
base_multi_pol[ID == 4044][,-"ID"]
base_multi_pol[ID == 4044][,-"ID"] %>% st_sf()
mapview(base_multi_pol[ID == 4044][,-"ID"] %>% st_sf())
mi_multi <- base_multi_pol[ID == 4044]
mi_vias <- vias_bogota[ID == 3278]
mi_multi$lon
mi_multi
mi_multi %>% leaflet()
mi_multi %>% leaflet() %>% addTiles()
mi_multi %>% leaflet() %>% addTiles() %>% addPolygons()
mi_multi
as.data.frame(mi_multi)
as.data.frame(mi_multi) %>% leaflet() %>% addTiles() %>% addPolygons()
st_sf(mi_multi) %>% leaflet() %>% addTiles() %>% addPolygons()
st_sf(mi_multi)
leaflet() %>% addTiles() %>% addCircles(lng = mi_pol$lon, lat = mi_pol$lat, popup = mi_pol$name)
mi_pol <- base_puntos_pol[pol_id == 3278]
mi_pol
leaflet() %>% addTiles() %>% addCircles(lng = mi_pol$lon, lat = mi_pol$lat, popup = mi_pol$name)
base_multi_pol[ID == 3278]
vias_bogota[ID == 3278]
mi_pol <- base_puntos_pol[pol_id == 4044]
leaflet() %>% addTiles() %>% addCircles(lng = mi_pol$lon, lat = mi_pol$lat, popup = mi_pol$name)
st_sf(mi_multi)
mi_multi[,-"ID"]
mi_multi[,-"ID"] %>% st_sf()
mi_multi[,-"ID"] %>% st_sf() %>% leaflet() %>% addTiles() %>% addPolygons()
mi_multi[,-"ID"] %>% st_sf() %>% mapview()
mi_vias <- vias_bogota[ID == 4044]
vias_bogota
## Miro las etiquetas para la característica de vías
available_tags("highway")
## Realizo el query a la app de overpass
query7 <- opq(bbox = "Bogota", timeout = 25*100) %>% add_osm_feature(key = "highway",value = c("primary","secondary","trunk")) %>% osmdata_sf()
res_highway <- query7$osm_lines[,c("osm_id","name","highway")] %>% mutate(features = highway) %>% dplyr::select("osm_id", "name", "features")
## Transformo las coordenadas de las vias
carreteras <-  res_highway %>% st_transform(st_crs("+proj=utm +ellps=GRS80 +datum=WGS84")) %>% st_make_valid()
## Transformo las coordenadas de los poligonos
pol_100 <- st_as_sf(geojson_read("Bases/bogota_subdivi_100.geojson", what = "sp")) %>% st_transform(st_crs("+proj=utm +ellps=GRS80 +datum=WGS84")) %>% st_make_valid()
## Realizo el join para ver la interseccion entre las carreteras y los poligonos
pol_carretera <- sf::st_join( pol_100,carreteras,  left = TRUE) %>% as.data.frame() %>% setDT()
pol_carretera <- sf::st_join( pol_100,carreteras,  left = TRUE)
pol_carretera
mi_vias <- pol_carretera[ID == 4044]
pol_carretera
mi_vias <- subset(pol_carretera, ID == 4044])
pol_carretera
mi_vias <- subset(pol_carretera, ID == 4044)
mapview(mi_vias)
mi_multi
mi_multi <- base_multi_pol[ID == 4044]
mi_multi
mi_pol <- base_puntos_pol[pol_id == 3278]
mi_pol
leaflet() %>% addTiles() %>% addCircles(lng = mi_pol$lon, lat = mi_pol$lat, popup = mi_pol$name)
mi_multi <- base_multi_pol[ID == 3278]
mi_multi[,-"ID"] %>% st_sf()
## Leo los datos
crs <- opq(bbox = "Bogota", timeout = 25*100) %>% add_osm_feature(key = "amenity",value = "bank") %>% osmdata_sf()
mi_multi <- base_multi_pol[ID == 3278] %>% st_sf() %>% st_transform(st_crs(crs$osm_points))
crs$osm_points
base_multi_pol[ID == 3278] %>% st_sf()
base_multi_pol[ID == 3278] %>% st_sf() %>% st_transform(st_crs(crs$osm_points))
st_geometry_type(mi_multi$geometry)
table(st_geometry_type(mi_multi$geometry))
mi_multi <- base_multi_pol[ID == 3278] %>% st_sf()
table(st_geometry_type(mi_multi$geometry))
mi_multi
base_multi_pol[ID == 3278]
osmdata_base
crs <- opq(bbox = "Bogota", timeout = 25*100) %>% add_osm_feature(key = "amenity",value = "bank") %>% osmdata_sf()
osmdata_base <- readRDS("Bases/osmdata_base.RDS") %>% st_sf() %>% st_transform(st_crs(crs$osm_points))
base_poligonos_multi <- subset(osmdata_base, st_geometry_type(geometry) != "POINT")
base_poligonos_multi <- base_poligonos_multi %>% st_transform(st_crs("+proj=utm +ellps=GRS80 +datum=WGS84")) %>% st_make_valid()
## Transformo las coordenadas de los poligonos
pol_100 <- st_as_sf(geojson_read("Bases/bogota_subdivi_100.geojson", what = "sp")) %>% st_transform(st_crs("+proj=utm +ellps=GRS80 +datum=WGS84")) %>% st_make_valid()
## Realizo el join para ver la interseccion entre las carreteras y los poligonos
pol_multi <- sf::st_join(pol_100, base_poligonos_multi, left = TRUE) %>% as.data.frame() #%>% setDT()
base_multi_pol
## Guardo la base final con la asignacion de los poligonos
saveRDS(object = pol_multi, file = "Bases/base_multi_pol.RDS")
base_multi_pol <- as.data.table(readRDS("Bases/base_multi_pol.RDS"))
base_multi_pol
pol_multi
## Realizo el join para ver la interseccion entre las carreteras y los poligonos
pol_multi <- sf::st_join(pol_100, base_poligonos_multi, left = TRUE) %>% as.data.frame() #%>% setDT()
saveRDS(object = pol_multi, file = "Bases/base_multi_pol.RDS")
pol_multi
base_multi_pol <- readRDS("Bases/base_multi_pol.RDS")
base_multi_pol
base_multi_pol[,ID == 3278]
subset(base_multi_pol, ID == 3278)
subset(base_multi_pol, ID == 3278) %>% st_sf()
mi_multi <- subset(base_multi_pol, ID == 3278) %>% st_sf()
mapview(mi_multi)
mi_multi
subset(base_multi_pol, ID == 3278) %>% st_sf()
data.frame(mi_multi)
mi_pol <- base_puntos_pol[pol_id == 3278]
mi_pol
leaflet() %>% addTiles() %>% addCircles(lng = mi_pol$lon, lat = mi_pol$lat, popup = mi_pol$name)
data.frame(mi_multi)
osm_dcast
osm_dcast
osm_dcast[ID == 4044]
osm_pol[order(categoria)][ID == 4044,.(n = .N), by = categoria]
# mi_pol <- osm_dcast[ID == 4044]; osm_pol[order(categoria)][ID == 4044,.(n = .N), by = categoria]
# leaflet() %>% addTiles() %>% addCircles(lng = mi_pol$lon, lat = mi_pol$lat, popup = mi_pol$name)
saveRDS(osm_dcast, "osm_dcast.RDS")
osm_dcast
